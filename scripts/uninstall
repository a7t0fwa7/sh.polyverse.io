#!/bin/sh

SHORT_DESCRIPTION="Uninstall Polymorphic Linux"

usage() {
cat >&2 <<-EOF

$SHORT_DESCRIPTION

Usage:

  curl https://sh.polyverse.io | sh -s uninstall [<options>]

Options:

  --help                 Display usage.

You can obtain a free trial authkey at https://polyverse.io.

EOF
}

apk_uninstall() {
        FILE='/etc/apk/repositories'

        # make sure the default repo file exists
        if [ ! -f "$FILE" ]; then
                echo "The default repo file '$FILE' is missing. This is unexpected, so exiting..."
                exit 1
        fi

        # missing backup file
        if [ ! -f "${FILE}.pvbak" ]; then
                echo "Can't find the backup file ${FILE}.pvbak. You can manually uninstall by removing all the lines with 'polyverse.io' from the file '$FILE'."
                exit 1
        fi
        
        echo "Restoring original version of '$FILE'..."
        mv ${FILE}.pvbak $FILE
        if [ $? -ne 0 ]; then
                echo "Encountered an issue moving the file '${FILE}.pvbak' to '$FILE'. Please perform this manually to complete the uninstall."
                exit 1
        fi

        echo "Polyverse's Polymorphic Linux repo entries have been successfully removed. All future package installs/updates will come from the previously specified repos."
}

deb_uninstall() {
        FILE='/etc/apt/sources.list'

        if [ ! -f "${FILE}.pvbak" ]; then
                echo "Can't find the backup file ${FILE}.pvbak. You can manually uninstall by removing all the lines with 'polyverse.io' from the file '$FILE'."
        exit 1
        fi

        echo "Restoring original version of '$FILE'..."
        mv ${FILE}.pvbak $FILE
        if [ $? -ne 0 ]; then
                echo "Encountered an issue moving the file '${FILE}.pvbak' to '$FILE'. Please perform this manually to complete the uninstall."
                exit 1
        fi

        echo "Polyverse's Polymorphic Linux repo entries have been successfully removed. All future package installs/updates will come from the previously specified repos."
}

rpm_uninstall() {
        FILE='/etc/yum.repos.d/polyverse.repo'

        if [ ! -f "$FILE" ]; then
                echo "Can't find the repo file '$FILE'. It does not appear that Polyverse's Polymorphic Linux is installed."
                exit 1
        fi

        rm $FILE
        if [ $? -ne 0 ]; then
                echo "Encountered an issue removing the file '$FILE'. Please remove it manually."
                exit 1
        fi

	#for x in /etc/yum.repos.d/*.repo.pvbak; do mv "$x" "${x%.pvbak}"; done
	#if [ $? -ne 0 ]; then
	#	echo "Encountered an issue moving the *.repo.pvbak files to *.repo. Please perform this manually to complete the uninstall."
	#	exit 1
	#fi

        echo "Polyverse's Polymorphic Linux repo file has successfully been uninstalled. All future package installs/updates will come from the previously specified repos."
}

shift
while [ $# -gt 0 ]; do
        case "$1" in
                --help)
                        usage
                        exit 1
                        ;;
                *)
			echo "Error: unexpected argument '$1'."
			exit 1
        esac
        shift
done

if [ $(id -u) -ne 0 ]; then
        echo "This script must be run as root. Please try running this again as a sudo or root user." 1>&2
        exit 1
fi

# make sure we're able to retrieve the distro release id (e.g., alpine, centos, ubuntu) and version id.
DISTRO=$(cat /etc/os-release 2>/dev/null | grep "^ID=" | cut -d '=' -f2 | tr -d '"')
RELEASE=$(cat /etc/os-release 2>/dev/null | grep "VERSION_ID=" | cut -d "=" -f2 | tr -d '"')
CODENAME=$(cat /etc/*-release 2>/dev/null | grep "^DISTRIB_CODENAME=" | cut -d '=' -f2 | tr -d '"')
ARCH="$(uname -m)"
if [ -z "$DISTRO" ] || [ -z "$RELEASE" ] || [ -z "$ARCH" ]; then
        echo "Could not determine Linux distro. DISTRO='$DISTRO', RELEASE='$RELEASE', ARCH='$ARCH'. Exiting..." >&2
        exit 1
fi

UNINSTALL_FUNCTION=""
case $DISTRO in
        alpine)
		UNINSTALL_FUNCTION="apk_uninstall"
                ;;
        centos | fedora | rhel)
		UNINSTALL_FUNCTION="rpm_uninstall"
                ;;
        ubuntu)
		UNINSTALL_FUNCTION="deb_uninstall"
		;;
        *)
                echo "Distro '$DISTRO' not supported."
                exit 1
                ;;
esac

$UNINSTALL_FUNCTION
